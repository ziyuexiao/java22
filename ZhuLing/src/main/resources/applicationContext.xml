<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"

       xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd">


    <!--自动扫描-->
    <context:component-scan base-package="com.kaishengit">
        <context:exclude-filter type="annotation"
                                expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>

    <!--读取properties文件-->
    <context:property-placeholder location="classpath:config.properties"/>
    <!--获取数据库资源-->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${jdbc.driver}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <!--事务管理-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>
    <!--基于注解的事务-->
    <tx:annotation-driven transaction-manager="transactionManager"/>


    <!--mybatis SqlsessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--数据库源-->
        <property name="dataSource" ref="dataSource"/>
        <!--别名类所在包-->
        <property name="typeAliasesPackage" value="com.kaishengit.pojo"/>
        <!--Mapper文件所在位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
        <!--其他配置-->
        <property name="configuration">
            <bean class="org.apache.ibatis.session.Configuration">
                <property name="mapUnderscoreToCamelCase" value="true"/>
            </bean>
        </property>
    </bean>
    <!--Mapper接口的自动扫描：自动将接口的实现类对象放在Spring容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.kaishengit.mapper"/>
    </bean>

    <!--初始化Activiti引擎并进行部署-->
    <bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
        <property name="processEngineName" value="spring"/>
        <property name="dataSource" ref="dataSource" />
        <property name="transactionManager" ref="transactionManager" />
        <property name="databaseSchemaUpdate" value="true" /><!--没有表会创建表-->
        <property name="jobExecutorActivate" value="false" />
        <!--部署Activiti-->
        <property name="deploymentResources" value="classpath*:/diagrams/leaveProcess/*.zip"/>
    </bean>
    <!--注入引擎工厂-->
    <bean id="processEngineFactory"
          class="org.activiti.spring.ProcessEngineFactoryBean">
        <property name="processEngineConfiguration" ref="processEngineConfiguration" />
    </bean>
    <!-- Activiti的Service -->
    <bean id="repositoryService" factory-bean="processEngineFactory"
          factory-method="getRepositoryService" />
    <bean id="runtimeService" factory-bean="processEngineFactory"
          factory-method="getRuntimeService" />
    <bean id="formService" factory-bean="processEngineFactory"
          factory-method="getFormService" />
    <bean id="identityService" factory-bean="processEngineFactory"
          factory-method="getIdentityService" />
    <bean id="taskService" factory-bean="processEngineFactory"
          factory-method="getTaskService" />
    <bean id="historyService" factory-bean="processEngineFactory"
          factory-method="getHistoryService" />
    <bean id="managementService" factory-bean="processEngineFactory"
          factory-method="getManagementService" />


</beans>
